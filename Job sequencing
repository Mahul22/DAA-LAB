#include <stdio.h>
#include <stdlib.h>

struct Job {
    int id;     
    int deadline; 
    int profit;   
};


int compareJobs(const void* a, const void* b) {
    return ((struct Job*)b)->profit - ((struct Job*)a)->profit;
}


void jobSequencing(struct Job jobs[], int n) {
   
    qsort(jobs, n, sizeof(struct Job), compareJobs);

    
    int maxDeadline = 0;
    for (int i = 0; i < n; i++) {
        if (jobs[i].deadline > maxDeadline) {
            maxDeadline = jobs[i].deadline;
        }
    }

 
    int* result = (int*)malloc(maxDeadline * sizeof(int));

 
    for (int i = 0; i < maxDeadline; i++) {
        result[i] = -1;
    }

    
    for (int i = 0; i < n; i++) {
        for (int j = jobs[i].deadline - 1; j >= 0; j--) {
            if (result[j] == -1) {
                result[j] = jobs[i].id;
                break;
            }
        }
    }


    printf("Job Sequence: ");
    for (int i = 0; i < maxDeadline; i++) {
        if (result[i] != -1) {
            printf("%d ", result[i]);
        }
    }
    printf("\n");


    int totalProfit = 0;
    for (int i = 0; i < maxDeadline; i++) {
        if (result[i] != -1) {
            totalProfit += jobs[result[i]].profit;
        }
    }
    printf("Total Profit: %d\n", totalProfit);

    free(result);
}

int main() {
   
    struct Job jobs[] = {{1, 2, 90}, {2, 1, 20}, {3, 2, 40}, {4, 1, 30}, {5, 3, 60}};
    int n = sizeof(jobs) / sizeof(jobs[0]);

    jobSequencing(jobs, n);

    return 0;
}
